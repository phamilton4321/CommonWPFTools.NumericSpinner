<UserControl x:Class="CommonWPFTools.UserControls.NumericSpinner"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CommonWPFTools.UserControls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="25" d:DesignWidth="100" FontFamily="Verdana">
    <UserControl.InputBindings>
        <MouseBinding Command="{Binding MouseWheelUpAction, RelativeSource={RelativeSource AncestorType=local:NumericSpinner}}">
            <MouseBinding.Gesture>
                <local:MouseWheelUp />
            </MouseBinding.Gesture>
        </MouseBinding>
        <MouseBinding Command="{Binding MouseWheelDownAction, RelativeSource={RelativeSource AncestorType=local:NumericSpinner}}">
            <MouseBinding.Gesture>
                <local:MouseWheelDown/>
            </MouseBinding.Gesture>
        </MouseBinding>
    </UserControl.InputBindings>
    <UserControl.Resources>

        <ResourceDictionary>

            <!-- 
                /// If you want the element to have rounded corners, set Value for Resource CornerRadiiusValue for this element.
            -->
            <sys:Double x:Key="CornerRadiusValue">3</sys:Double>


            <!-- #region Calculate CornerRadius values by defined CornerRadiusValue -->
            <CornerRadius x:Key="CustomCornerRadiusBorder"
                       TopLeft="{StaticResource CornerRadiusValue}"
                       BottomLeft="{StaticResource CornerRadiusValue}"
                       TopRight="{StaticResource CornerRadiusValue}"
                       BottomRight="{StaticResource CornerRadiusValue}"
                       />

            <CornerRadius x:Key="CustomCornerRadiusTextBox"
                       TopLeft="{StaticResource CornerRadiusValue}"
                       BottomLeft="{StaticResource CornerRadiusValue}"
                       TopRight="0"
                       BottomRight="0"
                       />
            <CornerRadius x:Key="CustomCornerRadiusUpButton"
                          TopRight="{StaticResource CornerRadiusValue}"
                          TopLeft="0" BottomLeft="0" BottomRight="0"/>
            <Thickness x:Key="CustomThicknessUpButton"
                       Left="0" Top="1" Right="1" Bottom="0"/>
            <CornerRadius x:Key="CustomCornerRadiusDownButton"
                          BottomRight="{StaticResource CornerRadiusValue}"
                          TopRight="0" BottomLeft="0" TopLeft="0"/>
            <Thickness x:Key="CustomThicknessDownButton"
                       Left="0" Top="0" Right="1" Bottom="1"/>
            <!-- #endregion -->

            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="BackgroundUpCmd">
                <GradientStop Color="#FFD1CACA" Offset="1"/>
                <GradientStop Color="#FFF0F0F0"/>
            </LinearGradientBrush>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" x:Key="BackgroundDownCmd">
                <GradientStop Color="#FFBFB7B7" />
                <GradientStop Color="#FFF0F0F0" Offset="1"/>
            </LinearGradientBrush>

            <!-- Define Button template for up-/down-buttons -->
            <ControlTemplate x:Key="updown_button_style" TargetType="Button">
                <Border x:Name="br" Background="{TemplateBinding Background}" >
                    <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="br" Property="Background" >
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFCBC9C9" Offset="0"/>
                                    <GradientStop Color="#FFA0A0A0" Offset="1"/>
                                    <GradientStop Color="#FFE4E4E4" Offset="0.569"/>
                                    <GradientStop Color="#FFE4E4E4" Offset="0.69"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter TargetName="br" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- Set button template for all buttons in this control -->
            <Style TargetType="Button">
                <Setter Property="Template" Value="{StaticResource updown_button_style}" />
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <!-- #region Grid Definitions -->
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <!-- #endregion -->

        <TextBox x:Name="TextboxMain" x:FieldModifier="private" FontWeight="Normal" FontSize="12px" VerticalContentAlignment="Center" Padding="8,1" 
                     Grid.Column="0" Grid.RowSpan="2"  TextChanged="TextBoxMain_TextChanged"
                     Text="{Binding Value, RelativeSource={RelativeSource AncestorType=local:NumericSpinner}, UpdateSourceTrigger=PropertyChanged}" 
                     BorderThickness="0,0,1,0">
            <TextBox.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="{StaticResource CustomCornerRadiusTextBox}"/>
                </Style>
            </TextBox.Resources>
        </TextBox>


        <Button x:Name="CmdUp" x:FieldModifier="private" 
                Grid.Column="1" Grid.Row="0" 
                Width="auto" Height="auto" 
                Command="{Binding StepUpButton, RelativeSource={RelativeSource AncestorType=local:NumericSpinner}}" 
                Background="{StaticResource BackgroundUpCmd}">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="{StaticResource CustomCornerRadiusUpButton}"/>
                    <Setter Property="BorderThickness" Value="{StaticResource CustomThicknessUpButton}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Style>
            </Button.Resources>
            <Button.Content>
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" Data="M0,6 H8 L4,0 Z"/>
            </Button.Content>
        </Button>
        
        <Button x:Name="CmdDown" x:FieldModifier="private" 
                Grid.Column="1" Grid.Row="1"
                Width="auto" Height="auto" 
                Command="{Binding StepDownButton, RelativeSource={RelativeSource AncestorType=local:NumericSpinner}}" 
                Background="{StaticResource BackgroundDownCmd}">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="{StaticResource CustomCornerRadiusDownButton}"/>
                    <Setter Property="BorderThickness" Value="{StaticResource CustomThicknessDownButton}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Style>
            </Button.Resources>
            <Button.Content>
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" Data="M0,0 H8 L4,6 Z"/>
            </Button.Content>
        </Button>


        <Border x:Name="MyBorder" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" IsHitTestVisible="False" 
                    BorderThickness="1" Background="{x:Null}" 
                    CornerRadius="{StaticResource CustomCornerRadiusBorder}"
                    Grid.RowSpan="2" Grid.ColumnSpan="2" Padding="0" Margin="0"/>
    </Grid>
</UserControl>
